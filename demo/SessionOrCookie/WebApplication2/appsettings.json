{
  // #region ******** Common ********
  // 项目信息配置
  "Project": {
    "ProjectId": "web2", //项目标识确保唯一
    "Description": "", //项目描述
    "ConsoleLogLevel": "Debug", //LogUtil.ConsoleLogger的日志级别，如果使用Serilog则无效
    "ResponseErrorDetail": true //是否返回客户端错误详细信息
  },
  // 日志
  "Serilog": {
    "Custom": {
      "RequestLogging": true
    },
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Async" ],
    "MinimumLevel": {
      "Default": "Verbose", // 日志级别限制：Verbose|Debug|Information|Warning|Error|Fatal
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Verbose",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "{Timestamp:HH:mm:ss} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "restrictedToMinimumLevel": "Information",
                "path": "./logs/log.txt",
                "rollingInterval ": "Day", // 滚动文件名生成策略。如：log20190101.txt
                "retainedFileCountLimit": "31", // 文件保留数限制,不限制 = null
                "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
              }
            }
          ]
        }
      }
    ],
    "Enrich": [ "WithTemplateHash" ],
    "Destructure": [],
    "Filter": [],
    "Properties": {
    }
  },

  // Redis配置
  "Redis": {
    "DefaultConnectionStringName": "default", // 默认redis连接
    "ConnectionStrings": [
      {
        "Name": "default",
        "ConnectionString": "123.127.93.180:26379,password=root,defaultDatabase=0,keepAlive=-1",
        "SerializeMode": "json",
        "NamespaceMap": "" // 映射此redis连接的命名空间集合，用;分隔
      }
    ]
  },

  // #endregion ******** Common ********

  // #region ******** Asp.Net ********
  "AspNet": {
    "RequestEnableBuffering": true //是否缓存Request.Body，如果不需要读取Body设置为false
  },

  // 启用Session或者Cookie Identity (TinyFx.AspNet.Configuration.SessionAndCookieSection)
  "SessionAndCookie": {
    "UseSession": false,
    "UseCookieIdentity": true,
    "ApplicationName": "xxyy", // 默认ProjectId，如需跨应用共享session或cookie，需设置相同值
    "Domain": null, // cookie保存的domain，跨域如: .xxyy.com
    "ConnectionStringName": "default", // redis连接字符串名，对应配置：Redis:ConnectionStrings:Name
    "IdleTimeout": 180, // Session过期时间,单位分钟。0:不过期
    "SameSiteMode": "None" //None,Lax
  },

  // 全局异常处理
  "GlobalException": {
    "HandleType": "Json", // Json,Page,Both
    "JsonHandleUrlKeys": "/api/;", //Json处理方式的Url关键字;分割
    "ErrorHandingPath": "/error", // Page处理方式错误跳转页面
    "exceptionStatusCodeDic": [
      {
        "StatusCode": "401",
        "Message": "未授权的请求"
      },
      {
        "StatusCode": "404",
        "Message": "找不到该页面"
      },
      {
        "StatusCode": "403",
        "Message": "访问被拒绝"
      },
      {
        "StatusCode": "500",
        "Message": "服务器发生意外的错误"
      }
    ]
  },

  // Asp.net core CORS跨域请求配置
  "Cors": {
    "Policies": [
      {
        "Name": "(default)", // 策略名称，默认(default)
        "Origins": "*", // 允许的来源,分号;分隔（下同）
        "Methods": "*", // 允许的HTTP方法
        "Headers": "*" // 允许的请求标头
      }
    ],
    "UseCors": {
      "Enabled": true,
      "PolicyName": ""
    }
  },

  // API版本控制
  "ApiVersioning": {
    "Mode": "QueryString"
  },

  // Swagger
  "Swagger": {
    "Enabled": true
  },
  // #endregion ******** Asp.Net ********

  "AllowedHosts": "*"
}
