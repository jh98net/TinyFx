{
  // 项目信息配置
  "Project": {
    "ProjectId": "TinyFx.Demos", //项目标识确保唯一
    "Description": "TinyFx样例", //项目描述
    "ConsoleLogLevel": "Debug", //LogUtil.ConsoleLogger的日志级别，如果使用Serilog则无效
    "ResponseErrorDetail": true //是否返回客户端错误详细信息
  },

  // 自定义配置信息
  "AppSettings": [
    {
      "Key": "myKey", //配置键
      "Value": "myValue" //配置值
    }
  ],

  // 数据库配置
  "Data": {
    "DefaultConnectionStringName": "default", // 默认数据库连接
    "DataRouter": "",
    "InstProvider": "",
    "ConnectionStrings": [
      {
        "Name": "default",
        "ProviderName": "mysql",
        "ConnectionString": "server=10.0.0.101;user id=root;pwd=KFadguzd8Rh2JgKHsGFK;database=demo;Allow User Variables=True",
        "ReadConnectionString": "", // 支持读写分离
        "CommandTimeout": "30",
        "InstProvider": "",
        "OrmMap": "" // 映射此数据库连接的命名空间集合，用;分隔
      }
    ]
  },

  // 日志
  "Serilog": {
    "Custom": {
      "RequestLogging": false
    },
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Async" ],
    "MinimumLevel": {
      "Default": "Verbose", // 日志级别限制：Verbose|Debug|Information|Warning|Error|Fatal
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Verbose",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "{Timestamp:HH:mm:ss} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "restrictedToMinimumLevel": "Information",
                "path": "./logs/log.txt",
                "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                "rollingInterval ": "Day", // 滚动文件名生成策略。如：log20190101.txt
                "retainedFileCountLimit": "31" // 不限制 = null
              }
            }
          ]
        }
      },
      {
        "Name": "TinyFxMySQL",
        "Args": {
          "enabled": true,
          "restrictedToMinimumLevel": "Error",
          "connectionString": "default",
          "tableName": "s_log",
          "storeTimestampInUtc": "false",
          "batchSize": 100 //批量提交数
        }
      }
    ],
    "Enrich": [ "WithTemplateHash" ],
    "Destructure": [],
    "Filter": [],
    "Properties": {
    }
  },

  // Redis配置
  "Redis": {
    "DefaultConnectionStringName": "default", // 默认redis连接
    "DefaultSerializeMode": "json", //序列化类型:json,protobuf,xml,DefaultString,DefaultBytes
    "RedisKeyPattern": "", //{ProjectId}:{RedisType}:{TypeName}
    "ConnectionStrings": [
      {
        "Name": "default",
        /*
        defaultDatabase=1 默认数据库索引, 从 0 到 databases - 1
        keepAlive=-1 如果在指定时间(seconds)内没有活动，那么发送一条信息来帮助socket保持连接
        password=null Redis服务器密码

        responseTimeout=SyncTimeout 时间（ms）来判断套接字是否不健康
        name=null 唯一名称，用来识别Redis里面的连接
        abortConnect=true  如果是 true，当没有可用的服务器时 Connect 不会创建连接              
        allowAdmin=false  如果是 true，开启一些被认为是有风险的命令
        channelPrefix=null  所有 pub/sub 操作的可选通道前缀{string}
        connectRetry=3  在初始化 Connect 时，连接重试次数
        connectTimeout=5000 连接超时设置，时间单位是ms
        configChannel="__Booksleeve_MasterChanged" 设置广播通道名称
        configCheckSeconds=60 检查配置的时间（秒）。如果支持，这可用作交互式套接字的保持活动状态。
        proxy=Proxy.None 使用的代理类型 (如果有的话); 例如 “twemproxy”
        resolveDns=false 指定DNS解析方式是显示而不是隐式
        ssl=false 指定使用SSL加密
        sslHost=null 强制SSL主机识别，需要使用服务器端证书
        sslProtocols=null 使用加密连接时支持Ssl/Tls版本。使用'|' 提供多个价值观。
        syncTimeout=5000 异步超时设置(ms)
        tiebreaker="__Booksleeve_TieBreak" 用于在模糊主方案中选择服务器的密钥
        writeBuffer=4096 输出缓存区的大小
        version="2.0" Redis 版本级别 (该选项是非常有用的，当服务器不可用时)
        serviceName=null 当前没有实现
        */
        "ConnectionString": "10.0.0.101:6379,password=AcUa84La3Ta59UqNdHQy,defaultDatabase=9,keepAlive=-1",
        "NamespaceMap": "" // 映射此redis连接的命名空间集合，用;分隔
      }
    ]
  },

  // 消息队列
  "RabbitMQ": {
    "DefaultConnectionStringName": "default",
    "DefaultSubIdSuffix": null,
    "LogEnabled": false,
    "ConnectionStrings": [
      {
        "Name": "default",
        /*
        host: 主机host1:5672,host2:5672
        virtualHost: 默认虚拟主机'/'
        username: 用户名，默认guest
        password: 密码，默认guest
        requestedHeartbeat: 默认值为10秒。设置为零表示无心跳
        prefetchcount: 在EasyNetQ发送确认之前RabbitMQ将传递的消息数。默认50,0表示无限预取，1可以在一组消费者中平衡工作
        publisherConfirms: 默认false，表示publisher发布的消息不保证实际送达。true:(timeout参数表示过期) 建议用bus.PubSub.PublishAsync(msg).ContinueWith(task=>{ if(task.IsCompleted && !task.IsFaulted){ OK.. }});
        persistentMessages: 默认true，RabbitMQ消息持久化
        product: 产品名称，将显示在RabbitMQ 的管理界面中
        platform: 平台名称，默认主机名，将显示在RabbitMQ 的管理界面中
        timeout: 默认10秒，0不限制
        */
        "ConnectionString": "host=10.0.0.101:5672;username=root;password=lQyxGhps5WgZFbfOlirz;publisherConfirms=true;timeout=60"
      }
    ],
    "MessageAssemblies": [], //用于注册消息发送
    "ConsumerAssemblies": [] //用于自动注册消费类
  },

  // AutoMapper
  "AutoMapper": {
    "Assemblies": [
      "" // 需要自动注册的dll名称
    ]
  },

  // HttpClientEx配置
  "HttpClient": {
    "Clients": [
      {
        "Name": "test",
        "SerializeMode": "json", //序列化类型:json,protobuf,xml
        "Encoding": null, //默认UTF8
        "BaseAddress": "http://api.help.bj.cn/",
        "RequestHeaders": [], //key-value格式,与Settings相同
        "Timeout": 5000, // 请求超时时长（毫秒）
        "RetryCount": 3, //重试次数，暂时无效
        "Settings": []
      }
    ]
  },

  //jwt验证
  "JwtAuth": {
    "DebugToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IlVzZXJJZC0xIiwicm9sZSI6IlVzZXIiLCJ1aXAiOiI6OjEiLCJuYmYiOjE2NTE1NDY4NzIsImV4cCI6MTY4MzA4Mjg3MiwiaWF0IjoxNjUxNTQ2ODcyLCJpc3MiOiJ0aW55ZnguY29tIiwiYXVkIjoidGlueWZ4LmNvbSJ9.wV3V6-K-zvLbtwjmakPYKDZh9kZgA2Gx-gUaQ2Vp_2U",
    "SignSecret": "ABASDfasfwe@#45346dfg",
    "DynamicSignSecret": false,
    "EncryptSecret": "",
    "Issuer": "tinyfx.com",
    "Audience": "tinyfx.com",
    "ValidateLifetime": false, //是否验证过期
    "ExpiresMinute": 1 // Token过期时间（分钟）,一年525600
  },

  // #region ******** Asp.Net ********

  // 全局异常处理
  "GlobalException": {
    "HandleType": "Json", // Json,Page,Both
    "JsonHandleUrlKeys": "/api/;", //Json处理方式的Url关键字;分割
    "ErrorHandingPath": "/error", // Page处理方式错误跳转页面
    "exceptionStatusCodeDic": [
      {
        "StatusCode": "401",
        "Message": "未授权的请求"
      },
      {
        "StatusCode": "404",
        "Message": "找不到该页面"
      },
      {
        "StatusCode": "403",
        "Message": "访问被拒绝"
      },
      {
        "StatusCode": "500",
        "Message": "服务器发生意外的错误"
      }
    ]
  },

  // Asp.net core CORS跨域请求配置
  "Cors": {
    "Policies": [
      {
        "Name": "(default)", // 策略名称，默认(default)
        "Origins": "*", // 允许的来源,分号;分隔（下同）
        "Methods": "*", // 允许的HTTP方法
        "Headers": "*" // 允许的请求标头
      }
    ],
    "UseCors": {
      "Enabled": true,
      "PolicyName": ""
    }
  },

  // API版本控制
  "ApiVersioning": {
    "Mode": "QueryString"
  },

  // Swagger
  "Swagger": {
    "Title": "{ProjectId}",
    "Description": "",
    "Version": "1.0"
  },

  // 未测试 - 输出缓存
  "ResponseCaching": {
    "Enabled": false,
    "MaxAge": 0 //缓存秒数
  },

  // 未测试 - 压缩
  "ResponseCompression": {
    "Enabled": false
  },

  // #endregion ******** Asp.Net ********

  // SMS
  "SMS": {
    "DefaultClientName": "default",
    "Clients": [
      {
        "Name": "default",
        "Provider": "tencent",
        "Debug": true,
        "ExpireMinutes": 5,
        "RequestUrl": "https://yun.tim.qq.com/v5/tlssmssvr/sendsms",
        "AppId": "",
        "AppKey": "",
        "TplId": 0,
        "Sign": ""
      }
    ]
  },
  // SmtpClientEx 配置
  "Smtp": {
    "DefaultClientName": "default",
    "Clients": [
      {
        "Name": "default",
        "Host": "smtp.163.com",
        "Port": 25,
        "FromAddress": "18910648185@163.com",
        "FromName": "master",
        "UserName": "18910648185@163.com",
        "Password": "ZYKWAVQEEBIVBZZW",
        "UseSsl": false
      }
    ],
    "SendTos": [
      {
        "Name": "default",
        "To": [ "" ],
        "CC": [ "" ]
      }
    ]
  },

  "AllowedHosts": "*"
}
